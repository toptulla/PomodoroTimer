@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@if (ShowErrors && Errors is not null)
{
    <ul>
        @foreach (var error in Errors)
        {
            <li>@error</li>
        }
    </ul>
}

<div class="flex justify-center items-center h-screen">
    <div class="flex flex-col items-center">
        <div class="flex flex-row items-end mt-5 w-[250px]">
            <NavLink class="text-2xl text-gray-900 dark:text-gray-300 hover:underline" href="/">&lt;&lt;-- home</NavLink>
        </div>
        <h2 class="font-semibold text-2xl text-gray-900 dark:text-gray-300">Register</h2>
        <div class="mt-3 w-[250px]">
            <EditForm Model="model" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mt-3">
                    <label for="email" class="block font-semibold text-gray-900 dark:text-gray-300">Email</label>
                    <InputText type="email" placeholder="Email" @bind-Value="model.Email" id="email" class="block border w-full h-5 px-3 py-5 hover:outline-none bg-gray-900 dark:bg-gray-300 focus:outline-none rounded-md"/>
                    <ValidationMessage For="@(() => model.Email)" />
                </div>
                <div class="mt-3">
                    <label for="password" class="font-semibold text-gray-900 dark:text-gray-300">Password</label>
                    <InputText type="password" placeholder="Password" @bind-Value="model.Password" id="password" class="block border w-full h-5 px-3 py-5 hover:outline-none bg-gray-900 dark:bg-gray-300 focus:outline-none rounded-md"/>
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                <div class="mt-3">
                    <label for="confirmpassword" class="font-semibold text-gray-900 dark:text-gray-300">Confirm Password</label>
                    <InputText type="password" placeholder="Password" @bind-Value="model.ConfirmPassword" id="confirmpassword" class="block border w-full h-5 px-3 py-5 hover:outline-none bg-gray-900 dark:bg-gray-300 focus:outline-none rounded-md"/>
                    <ValidationMessage For="@(() => model.ConfirmPassword)" />
                </div>
                <div class="mt-3">
                    <button type="submit" class="bg-green-500 rounded-md text-gray-900 dark:text-gray-300 py-2 px-6 hover:bg-green-600">Register</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private RegisterModel model = new RegisterModel();
    private bool ShowErrors;
    private IEnumerable<string?>? Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(model);
        if (result is not null && result.Succeeded)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result?.Errors;
            ShowErrors = Errors is not null;
        }
    }
}